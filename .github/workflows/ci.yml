name: CI

on:
   push:
      branches:
         - master
      tags:
         - 'v*'
   pull_request:

jobs:
   build:
      name: Build
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v4
         - uses: actions/setup-node@v4
           with:
              node-version: '20.10.0'
         - uses: pnpm/action-setup@v2
           name: Install pnpm
           with:
              version: 9
              run_install: false
         - name: Get pnpm store directory
           shell: bash
           run: |
              echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
         - uses: actions/cache@v4
           name: Setup pnpm cache
           with:
              path: ${{ env.STORE_PATH }}
              key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
              restore-keys: |
                 ${{ runner.os }}-pnpm-store-
         - run: pnpm install
         - run: pnpm build
         - run: pnpm test

   release:
      name: Update Client
      needs: [build]
      if: startsWith(github.ref, 'refs/tags/v')
      permissions:
         contents: write
      strategy:
         matrix:
            include:
               - platform: 'macos-latest' # for Arm based macs (M1 and above).
                 args: '--target aarch64-apple-darwin'
               - platform: 'macos-latest' # for Intel based macs.
                 args: '--target x86_64-apple-darwin'
               - platform: 'ubuntu-latest'
                 args: ''
               - platform: 'windows-latest'
                 args: ''
      runs-on: ${{ matrix.platform }}
      steps:
         - uses: actions/checkout@v4
         - uses: actions/setup-node@v4
           with:
              node-version: '20.10.0'
         - uses: pnpm/action-setup@v2
           name: Install pnpm
           with:
              version: 9
              run_install: false
         - name: Get pnpm store directory
           shell: bash
           run: |
              echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
         - uses: actions/cache@v4
           name: Setup pnpm cache
           with:
              path: ${{ env.STORE_PATH }}
              key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
              restore-keys: |
                 ${{ runner.os }}-pnpm-store-
         - name: install Rust stable
           uses: dtolnay/rust-toolchain@stable
           with:
              targets:
                 ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin'
                 || '' }}
         - name: install dependencies (ubuntu only)
           if: matrix.platform == 'ubuntu-latest'
           run: |
              sudo apt-get update
              sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
         - run: pnpm install
         - run: pnpm build:app
         - uses: tauri-apps/tauri-action@v0
           env:
              GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
              TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
              TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
           with:
              tagName: v__VERSION__
              releaseName: 'v__VERSION__'
              releaseBody: 'See the assets to download this version and install it.'
              releaseDraft: false
              prerelease: false
              args: ${{ matrix.args }}
